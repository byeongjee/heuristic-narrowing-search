
load ../tool/param.maude
load ../tool/state.maude
load ../tool/tool.maude
load ../model/mutual-exclusion.maude

fmod MUTUAL-EXCLUSION-INDEX is
    including DEFAULT-INDEX .
endfm

fmod MUTUAL-EXCLUSION-SCORE-BFS is
    including SCORE .

    subsort Nat < Score .
    
    vars N N' D : Nat .
    var T : Term .

    eq N gt N' = N >  N' .
    eq N lt N' = N <  N' .
    eq N le N' = N <= N' .

    eq score(T, D) = D .
endfm

fmod MUTUAL-EXCLUSION-SCORE-BASE is
    including SCORE .

    subsort Nat < Score .
    
    vars N N' D : Nat .
    var T : Term .
    var F : Qid .
    vars TL TL' : TermList .
    var NTL : NeTermList .
    var V : Variable .

    eq N gt N' = N >  N' .
    eq N lt N' = N <  N' .
    eq N le N' = N <= N' .

    eq score(F[T], D) = scoreAux(T) .

    op scoreAux : NeTermList -> Score .
    eq scoreAux('__[NTL]) = scoreAux(NTL) .
    eq scoreAux((T, NTL)) = scoreAux(T) + scoreAux(NTL) .
    eq scoreAux('msg_from_to_[NTL]) = 0 .
    eq scoreAux('<_:_|_>[T, 'Server.Server]) = 0 .
    eq scoreAux(T) = 0 [owise] .

    *** auxiliary function
    op toNumber : TermList -> Nat .
    eq toNumber(('s.NzNatural, TL)) = s(toNumber(TL)) .
    eq toNumber('__[TL]) = toNumber(TL) . 
    eq toNumber(V) = 0 .
    eq toNumber(empty) = 0 .
endfm

fmod MUTUAL-EXCLUSION-SCORE-G is
    including MUTUAL-EXCLUSION-SCORE-BASE .

    vars T : Term .
    var F : Qid .
    var D : Nat .
    var NETL : NeTermList .

    op termSize : NeTermList -> Nat .
    eq termSize(F[NETL]) = 1 + termSize(NETL) .
    eq termSize((T, NETL)) = termSize(T) + termSize(NETL) .
    eq termSize(T) = 1 [owise] .

    eq score(T, D) = termSize(T) .
endfm


fmod MUTUAL-EXCLUSION-SCORE-1 is
    including MUTUAL-EXCLUSION-SCORE-BASE .

    vars T1 T2 T3 : Term .
    var F : Qid .

    eq scoreAux('<_:_|_>[T1, 'Client.Client, 'status`:_[F[T3]]])
    = 10 + toNumber(T3) .

    eq scoreAux('<_:_|_>[T1, 'Client.Client, 'status`:_['error.Status]]) = 10 .

endfm

fmod MUTUAL-EXCLUSION-SCORE-2 is
    including MUTUAL-EXCLUSION-SCORE-BASE .

    vars T1 T2 T3 : Term .
    var F : Qid .

    eq scoreAux('<_:_|_>[T1, T2, 'status`:_[F[T3]]])
    = 2 + toNumber(T3) .
    eq scoreAux('<_:_|_>[T1, 'Client.Client, 'status`:_['error.Status]]) = 5 .
endfm

fmod MUTUAL-EXCLUSION-SCORE-3 is
    including MUTUAL-EXCLUSION-SCORE-BASE .

    vars T1 T2 T3 : Term .
    var F : Qid .

    eq scoreAux('<_:_|_>[T1, T2, 'status`:_[F[T3]]])
    = 1 + toNumber(T3) .
    eq scoreAux('<_:_|_>[T1, 'Client.Client, 'status`:_['error.Status]]) = 1 .
endfm

mod MAIN is
    protecting MUTUAL-EXCLUSION-ANALYSIS-BASE .
    protecting MUTUAL-EXCLUSION-INDEX .
    protecting HEURISTIC-NARROWING-DRIVER .

endm

mod TEST-BFS is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-BFS .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INITCLIENTS : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm

mod TEST-G is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-G .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INITCLIENTS : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm

mod TEST-1 is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-1 .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INITCLIENTS : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm

mod TEST-2 is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-2 .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INITCLIENTS : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm

mod TEST-3 is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-3 .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INITCLIENTS : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm


set print attribute on .
--- error threshold 2
red in TEST-G : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-2 : 
      {INITCLIENTS < server : Server | incrit : false, waiting : nil >} 
  =>* {< O : Client | status : error, ATTS:CounterAttr > CF}
  such that noDupl(getOids(INITCLIENTS)) .

---(
red in TEST-1 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-2 : 
      {INITCLIENTS < server : Server | incrit : false, waiting : nil >} 
  =>* {< O : Client | status : error, ATTS:CounterAttr > CF}
  such that noDupl(getOids(INITCLIENTS) ; server) .

red in TEST-2 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-2 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-3 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-2 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .


--- error threshold 3
red in TEST-G : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-1 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-2 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-3 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .


--- error threshold 4
red in TEST-G : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-1 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-2 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-3 : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .


--- bfs tests
red in TEST-BFS : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-2 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-BFS : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .

red in TEST-BFS : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INITCLIENTS < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INITCLIENTS < server : Server | ATTS:InitServerAttrSet >)) .