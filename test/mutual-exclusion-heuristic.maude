
load ../tool/param.maude
load ../tool/state.maude
load ../tool/tool.maude
load ../model/mutual-exclusion.maude

fmod MUTUAL-EXCLUSION-INDEX is
    including INDEX .

    subsort Term < Index .

    var T : Term .

    eq index(T) = T .
endfm

fmod MUTUAL-EXCLUSION-SCORE-BFS is
    including SCORE .

    subsort Nat < Score .
    
    vars N N' D : Nat .
    var T : Term .

    eq N gt N' = N >  N' .
    eq N lt N' = N <  N' .
    eq N le N' = N <= N' .

    eq score(T, D) = D .
endfm

fmod MUTUAL-EXCLUSION-SCORE-1 is
    including SCORE .

    subsort Nat < Score .
    
    vars N N' D : Nat .
    vars T T1 T2 : Term .
    var F : Qid .
    var TL : TermList .
    var NTL : NeTermList .

    eq N gt N' = N >  N' .
    eq N lt N' = N <  N' .
    eq N le N' = N <= N' .

    eq score(F[T], D) = scoreAux(T) .

    op scoreAux : NeTermList -> Score .
    eq scoreAux('__[NTL]) = scoreAux(NTL) .
    eq scoreAux((T, NTL)) = scoreAux(T) + scoreAux(NTL) .
    eq scoreAux('<_:_|_>[TL]) =  1 . 
    eq scoreAux('msg_from_to_[NETL]) = 1 .
    eq scoreAux(T) = 0 [owise] .
endfm



mod MAIN is
    protecting MUTUAL-EXCLUSION-ANALYSIS .
    protecting MUTUAL-EXCLUSION-INDEX .
    protecting MUTUAL-EXCLUSION-SCORE-1 .
    protecting HEURISTIC-NARROWING-DRIVER .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INIT : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm

set print attribute on .

red heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS : 
      {INIT < server : Server | ATTS:InitServerAttrSet >} 
  =>* {< O : Client | status : crit(s s) > CF}
  such that noDupl(getOids(INIT < server : Server | ATTS:InitServerAttrSet >)) .
