
load ../tool/param.maude
load ../tool/state.maude
load ../tool/tool.maude
load ../model/mutual-exclusion.maude

fmod MUTUAL-EXCLUSION-INDEX is
    including DEFAULT-INDEX .
endfm

fmod MUTUAL-EXCLUSION-SCORE-BFS is
    including SCORE .

    subsort Nat < Score .
    
    vars N N' D : Nat .
    var T : Term .

    eq N gt N' = N >  N' .
    eq N lt N' = N <  N' .
    eq N le N' = N <= N' .

    eq score(T, D) = D .
endfm

fmod MUTUAL-EXCLUSION-SCORE-BASE is
    including SCORE .

    subsort Nat < Score .
    
    vars N N' D : Nat .
    var T : Term .
    var F : Qid .
    vars TL TL' : TermList .
    var NTL : NeTermList .
    var V : Variable .

    eq N gt N' = N >  N' .
    eq N lt N' = N <  N' .
    eq N le N' = N <= N' .
endfm

fmod MUTUAL-EXCLUSION-SCORE-G is
    including MUTUAL-EXCLUSION-SCORE-BASE .

    vars T : Term .
    var F : Qid .
    var D : Nat .
    var NTL : NeTermList .

    op termSize : NeTermList -> Nat .
    eq termSize(F[NTL]) = 1 + termSize(NTL) .
    eq termSize((T, NTL)) = termSize(T) + termSize(NTL) .
    eq termSize(T) = 1 [owise] .

    eq score(T, D) = termSize(T) [print "hi"] .
endfm



mod MAIN is
    protecting MUTUAL-EXCLUSION-ANALYSIS-BASE .
    protecting MUTUAL-EXCLUSION-INDEX .
    protecting HEURISTIC-NARROWING-DRIVER .

endm

mod TEST-BFS is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-BFS .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INIT : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm

mod TEST-G is
    protecting MAIN .
    protecting MUTUAL-EXCLUSION-SCORE-G .

    vars N M : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INIT : InitConfiguration .
    vars ATTS ATTS' : StatusAttr .
    var CF : Configuration .
endm


red in TEST-G : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INIT < server : Server | incrit : false, waiting : nil >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INIT) ; server) .


do clear memo .

red in TEST-G : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INIT < server : Server | incrit : false, waiting : nil >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INIT) ; server) .

do clear memo .

red in TEST-BFS : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-3 : 
      {INIT < server : Server | incrit : false, waiting : nil >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INIT) ; server) .


do clear memo .

red in TEST-BFS : heuristic-narrow {filter delay} in 'MUTUAL-EXCLUSION-ANALYSIS-4 : 
      {INIT < server : Server | incrit : false, waiting : nil >} 
  =>* {< O : Client | status : error > CF}
  such that noDupl(getOids(INIT) ; server) .

do clear memo .