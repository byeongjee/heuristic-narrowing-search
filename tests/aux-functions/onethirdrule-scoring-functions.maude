
fmod ONETHIRDRULE-SCORE-BFS is
    including SCORE .

    subsort Nat < Score .

    vars N N' D : Nat .
    vars T : Term .

    eq le(N, N') = N <= N' .

    eq score(T, D) = D .
endfm

--- for SCORE-G and SCORE-1
fmod ONETHIRDRULE-SCORE-BASE is
    including SCORE .
    protecting META-MODULE .

    vars N N' : Nat .
    vars T TN TO TV TB TOBJ TCF : Term .
    vars F Q : Qid .
    var D : Nat .
    var V : Variable .
    var TL : TermList .
    var NTL : NeTermList .

    subsort Nat < Score .

    eq le(N, N') = N <= N' .

    eq score(F[TN, TO, TCF], D) = scoreAux(TCF) .
    eq score(F[TV, TB, TN, TO, TOBJ, TCF], D) = scoreAux((TOBJ, TCF)) .

    op scoreAux : NeTermList -> Score .
    eq scoreAux('__[NTL]) = scoreAux(NTL) .
    eq scoreAux((T, NTL)) = scoreAux(T) + scoreAux(NTL) .
    eq scoreAux(T) = 0 [owise] .

    *** auxiliary function
    op toNumber : TermList -> Nat .
    eq toNumber(('s.Natural, TL)) = s(toNumber(TL)) .
    eq toNumber('__[TL]) = toNumber(TL) . 
    eq toNumber(TL) = 0 [owise] .
endfm

fmod ONETHIRDRULE-SCORE-G is
    including ONETHIRDRULE-SCORE-BASE .

    var TL : TermList .

    eq scoreAux('<_:_|_>[TL]) =  1 . 
endfm


fmod ONETHIRDRULE-SCORE-1 is
    including ONETHIRDRULE-SCORE-BASE .

    vars TO TC TS TR : Term .
    vars TL : TermList .

    eq scoreAux('<_:_|_>[TO, TC, '_`,_['status`:_['`[_`,_`][TR, TS]], TL]])
     = (if TS == 'done.Step then 1 else 10 fi) + max(1, toNumber(TR)) .
endfm

fmod ONETHIRDRULE-SCORE-2 is
    including ONETHIRDRULE-SCORE-BASE .

    vars TO TC TS TR : Term .
    vars TL : TermList .

    eq scoreAux('<_:_|_>[TO, TC, '_`,_['status`:_['`[_`,_`][TR, TS]], TL]])
     = (if TS == 'done.Step then 9 else 10 fi) + max(1, toNumber(TR)) .
endfm


fmod ONETHIRDRULE-SCORE-3 is
    including ONETHIRDRULE-SCORE-BASE .
    protecting INT .

    subsort Int < Score .

    vars TO TC TS TR : Term .
    vars TL : TermList .

    eq scoreAux('<_:_|_>[TO, TC, '_`,_['status`:_['`[_`,_`][TR, TS]], TL]])
     = 100 + 10 * max(1, toNumber(TR)) .

    eq scoreAux('multicast_from_to_[TL]) = -1 .
endfm
