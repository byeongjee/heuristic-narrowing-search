
fmod ONETHIRDRULE-SCORE-BFS is
    including SCORE .
    protecting INT .

    subsort Int < Score .

    vars N N' D : Int .
    vars T : Term .

    eq le(N, N') = N <= N' .

    eq score(T, D) = D .
endfm

--- for SCORE-G and SCORE-1
fmod ONETHIRDRULE-SCORE-BASE is
    including SCORE .
    protecting INT .

    subsort Int < Score .

    vars N N' : Int .
    vars T TN TOS TV TB TOBJ TCF : Term .
    var D : Nat .
    var F : Qid .
    var NETL : NeTermList .
    var TL : TermList .

    eq le(N, N') = N <= N' .

    eq score(F[TN,TOS,TCF], D) = score(TCF) .

    op score : Term -> Score .
    eq score('__[TL]) = scoreL(TL) .
    eq score('decide?[TV, TB, TN, TOS, TOBJ, TCF], D) = scoreL((TOBJ, TCF)) .
    eq score('update?[TV, TB, TN, TOS, TOBJ, TCF], D) = scoreL((TOBJ, TCF)) .
    eq score(T) = 0 [owise] .

    op scoreL : TermList -> Score .
    eq scoreL((T, TL)) = score(T) + scoreL(TL) .
    eq scoreL(empty) = 0 .

    *** auxiliary function
    op toNumber : NeTermList -> Int .
    eq toNumber('s.Natural) = 1 .
    eq toNumber('__[TL]) = toNumber(TL) .
    eq toNumber((T, NETL)) = toNumber(T) + toNumber(NETL) .
    eq toNumber(T) = 0 [owise] .
endfm

fmod ONETHIRDRULE-SCORE-G is
    including ONETHIRDRULE-SCORE-BASE .

    var TL : TermList .

    eq score('<_:_|_>[TL]) =  1 . 
    eq score('multicast_from_to_[TL]) = 0 .
endfm


fmod ONETHIRDRULE-SCORE-1 is
    including ONETHIRDRULE-SCORE-BASE .

    vars OT CT ST RT : Term .
    vars TL : TermList .

    eq score('<_:_|_>[OT, CT, '_`,_['status`:_['`[_`,_`][RT, ST]], TL]])
     = (if ST == 'done.Step then 1 else 10 fi) + max(1, toNumber(RT)) .

    eq score('multicast_from_to_[TL]) = 0 .
endfm

fmod ONETHIRDRULE-SCORE-2 is
    including ONETHIRDRULE-SCORE-BASE .

    vars OT CT ST RT : Term .
    vars TL : TermList .

    eq score('<_:_|_>[OT, CT, '_`,_['status`:_['`[_`,_`][RT, ST]], TL]])
     = (if ST == 'done.Step then 9 else 10 fi) + max(1, toNumber(RT)) .

    eq score('multicast_from_to_[TL]) = 0 .
endfm


fmod ONETHIRDRULE-SCORE-3 is
    including ONETHIRDRULE-SCORE-BASE .

    vars OT CT ST RT : Term .
    vars TL : TermList .

    eq score('<_:_|_>[OT, CT, '_`,_['status`:_['`[_`,_`][RT, ST]], TL]])
     = 100 + 10 * max(1, toNumber(RT)) .

    eq score('multicast_from_to_[TL]) = -1 .
endfm
