
load ../heuristic-search/param.maude
load aux-functions/onethirdrule-index.maude
load aux-functions/onethirdrule-scoring-functions.maude

load ../heuristic-search/state.maude
load ../heuristic-search/tool.maude

load ../models/onethirdrule.maude


mod MAIN is
    protecting ONETHIRDRULE-HALF-THRESHOLD .
    protecting ONETHIRDRULE-INDEX .
    protecting ONETHIRDRULE-SCORE-1 .
    protecting HEURISTIC-NARROWING-DRIVER .

    var N : Natural .
    vars O O' : Oid .
    var OS : OidSet .
    var INITIAL : InitConfiguration .
    vars ATTS ATTS' : U124S .
    var CF : Configuration .
endm


---(
red in DRIVER4 : metaHeuristicNarrowingSearch(
    upModule('ONETHIRDRULE-WITH-INV-HALF, false),
    '`{_`,_`,_`}['N:Natural, 'OS:OidSet, 'INITIAL:InitConfiguration],
    '`{_`,_`,_`}['N:Natural,'OS:OidSet,'__['CF:Configuration,'<_:_|_>[
    'O:Oid,'Node.Cid,'_`,_['ATTS:U124S,'decision`:_['true.Boolean]]],'<_:_|_>[
    'O':Oid,'Node.Cid,'_`,_['ATTS':U124S,'decision`:_['false.Boolean]]]]],
    'initCond['`{_`,_`,_`}['N:Natural, 'OS:OidSet, 'INITIAL:InitConfiguration]],
    delay filter) .
---)

red heuristic-narrow {filter delay} in 'ONETHIRDRULE-HALF-THRESHOLD : 
      {N, OS, INITIAL} 
  =>* {N, OS, < O  : Node | decision : true,  ATTS  >
              < O' : Node | decision : false, ATTS' > CF}
  such that initCond({N, OS, INITIAL}) .
