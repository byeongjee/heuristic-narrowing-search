load fvp-bool.maude 

mod VALUE is
    protecting FVP-BOOL .

    sorts Value InitialValue Value? .
    subsort Bool' < Value < Value? .
    subsort InitialValue < Value? .

    op nil : -> InitialValue [ctor] .
endm

fmod STEP is
    sorts Step InitialStep .
    subsort InitialStep < Step .
    op init : -> InitialStep [ctor] .
    ops waiting finished : -> Step [ctor] .
endfm


mod NODE is
  sorts Node Cid  .
  subsort Node < Cid .
  op Node : -> Cid [ctor] .
endm

mod STATUS is
    protecting FVP-NAT .
    protecting STEP .

    sorts Status InitialStatus .
    subsort InitialStatus < Status .

    op _`,_ : Zero InitialStep -> InitialStatus [ctor] . 
    op _`,_ : Nat Step -> Status [ctor] . 
endm

mod VOTE is
    protecting FVP-NAT .

    sorts Vote InitialVote .
    subsort InitialVote < Vote .

    op _`,_`,_ : Zero Zero Zero -> InitialVote [ctor] .
    op _`,_`,_ : Nat Nat Nat -> Vote [ctor] .
endm

mod OID-SET is
    sorts Oid OidSet .
    subsort Oid < OidSet .
    op none : -> OidSet [ctor] .
    op _;_ : OidSet OidSet -> OidSet [ctor assoc comm id: none] .
endm