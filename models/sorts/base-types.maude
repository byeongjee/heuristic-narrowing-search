load fvp-bool.maude 

fmod VALUE is
    protecting FVP-BOOL .

    sorts Value InitValue? Value? .
    subsort Boolean < Value < Value? .
    subsort InitValue? < Value? .

    op nil : -> InitValue? [ctor] .
endfm

fmod STEP is
    sorts Step InitStep .
    subsort InitStep < Step .
    op init : -> InitStep [ctor] .
    ops wait done : -> Step [ctor] .
endfm


fmod NODE is
  sorts Node Cid  .
  subsort Node < Cid .
  op Node : -> Cid [ctor] .
endfm

fmod STATUS is
    protecting FVP-NAT .
    protecting STEP .

    sorts Status InitStatus .
    subsort InitStatus < Status .
    sort InitialRound .

    op [_,_] : Natural Step -> Status [ctor] . 

*** InitStatus will be defined in each model. We take this approach to
*** customize the initial round for each model.
endfm

fmod VOTE is
    protecting FVP-NAT .

    sorts Vote InitVote .
    subsort InitVote < Vote .

    op [_,_,_] : Zero Zero Zero -> InitVote [ctor] .
    op [_,_,_] : Natural Natural Natural -> Vote [ctor] .
endfm

fmod OID-SET is
    sorts Oid OidSet .
    subsort Oid < OidSet .
    op none : -> OidSet [ctor] .
    op _;_ : OidSet OidSet -> OidSet [ctor assoc comm id: none] .
endfm