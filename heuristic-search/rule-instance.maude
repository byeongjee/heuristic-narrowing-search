fmod RULE-INSTANCE is
    protecting META-LEVEL .

    sorts RuleInstance RuleInstanceSet RulePattern .
    subsort RuleInstance < RuleInstanceSet .
    subsort Term < RulePattern .
    op any : -> RulePattern [ctor] .


    *** rule label, instance of rule LHS 
    op [_,_] : Qid RulePattern -> RuleInstance [ctor] .

    op none : -> RuleInstanceSet [ctor] .

    op _;_ : RuleInstanceSet RuleInstanceSet -> RuleInstanceSet [ctor assoc comm id: none] .

    op isRuleInstance : Module RuleInstanceSet Qid Term -> Bool .

    var M : Module .
    var L : Qid .
    vars T T0 : Term .
    var RLS : RuleInstanceSet .

    eq isRuleInstance(M, [L, any] ; RLS, L, T) = true .

    ceq isRuleInstance(M, [L, T0] ; RLS, L, T) 
    = true if metaMatch(M, T, T0, nil, 0) =/= noMatch .

    eq isRuleInstance(M, RLS, L, T) = false [owise] .

endfm