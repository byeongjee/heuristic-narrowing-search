fmod VALUE is
    protecting FVP-BOOL .
    protecting FVP-NAT .

    sorts Value InitValue? Value? .
    subsort  Value < Value? .
    subsort InitValue? < Value? .

    subsort Natural < Value .

    op nil : -> InitValue? [ctor] .

    sort ValueSet .
    subsort Value < ValueSet .
    op emptyVs : -> ValueSet [ctor] .
    op _;_ : ValueSet ValueSet -> ValueSet [ctor assoc comm id: emptyVs] .
endfm


fmod STEP is
    sorts Step InitStep .
    subsort InitStep < Step .
    op init : -> InitStep [ctor] .
    ops wait done : -> Step [ctor] .
endfm


fmod NODE is
    sorts Node Cid  .
    subsort Node < Cid .
    op Node : -> Cid [ctor] .
endfm


fmod STATUS is
    protecting FVP-NAT .
    protecting STEP .

    sorts Status InitStatus .
    subsort InitStatus < Status .
    sort InitialRound .

    op [_,_] : Natural Step -> Status [ctor format (d d d s d d)] . 
    op [_,_] : Natural InitStep -> InitStatus [ctor ditto] . 
endfm

fmod VOTE-MAP is
    protecting FVP-NAT .
    protecting VALUE .

    sorts  VoteMap InitVoteMap Entry InitEntry .
    subsort InitEntry < Entry InitVoteMap < VoteMap .

    op  _|->_ : Value Natural -> Entry [ctor prec 50] .
    op  _|->_ : Value FZero -> InitEntry [ctor prec 50] .

    op none : -> InitEntry [ctor] .
    op _;_ : VoteMap VoteMap -> VoteMap [ctor assoc comm id: none prec 60] .
    op _;_ : InitVoteMap InitVoteMap -> InitVoteMap [ctor assoc comm id: none prec 60] .
endfm

view VoteMap from TRIV to VOTE-MAP is
    sort Elt to VoteMap .
endv

fmod VOTE is
    protecting VOTE-MAP .

    sort Vote .
    op [_,_] : VoteMap Natural -> Vote [ctor prec 70] .

    sort InitVote .
    subsort InitVote < Vote .

    op [_,_] : InitVoteMap FZero -> InitVote [ctor prec 70] .
endfm


fmod OID-SET is
    sorts Oid OidSet .
    subsort Oid < OidSet .
    op none : -> OidSet [ctor] .
    op _;_ : OidSet OidSet -> OidSet [ctor assoc comm id: none] .
endfm
