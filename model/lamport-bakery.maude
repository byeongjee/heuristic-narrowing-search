load ./sorts/fvp-bool.maude
load ./sorts/fvp-nat.maude
load ./sorts/base-types.maude

set include BOOL off .

mod BAKERY-STATUS is 
    protecting FVP-NAT .

    sorts Status InitStatus .
    subsort InitStatus < Status .

    op ready : -> InitStatus [ctor] .
    ops wait crit : Natural -> Status [ctor] .
endm

mod BAKERY-ATTS is
    protecting BAKERY-STATUS .

    sorts StatusAttr InitStatusAttr .
    subsort InitStatusAttr < StatusAttr .

    op status`:_ : InitStatus -> InitStatusAttr [ctor prec 15 gather (&)] .
    op status`:_ : Status -> StatusAttr [ctor prec 15 gather (&)] .
endm

mod ALT-CFIGURATION is
    protecting NODE .
    protecting BAKERY-ATTS .
    protecting OID-SET .



    sorts None Object Msg ObjectSet Configuration InitObject InitConfiguration .
    subsort InitObject < Object InitConfiguration < Configuration .
    subsort Msg < Configuration .

    op none : -> InitConfiguration [ctor] .
    op __ : InitConfiguration InitConfiguration -> InitConfiguration [ctor assoc comm id: none] .
    op __ : Configuration Configuration -> Configuration [ctor assoc comm id: none] .

    op <_:_|_> : Oid Cid InitStatusAttr -> InitObject [ctor object] .
    op <_:_|_> : Oid Cid StatusAttr -> Object [ctor object] .
endm

mod GLOBAL is
    protecting ALT-CFIGURATION .
    protecting FVP-NAT .

    sort Global .
    op {_,_,_} : Natural Natural Configuration -> Global [ctor format (d d d s d s d d)] .
endm


mod BAKERY is
    protecting GLOBAL .
    vars N M : Natural . 
    vars O O' : Oid .
    var CONF : Configuration .

    rl [get-ticket] : {N, M, < O : Node | status : ready > CONF}
    => {s N, M, < O : Node | status : wait(N) > CONF} [narrowing] .

    rl [enter-crit] : {N, M, < O : Node | status : wait(M) > CONF}
    => {N, M, < O : Node | status : crit(M) > CONF} [narrowing] .

    rl [exit-crit] : {N, M, < O : Node | status : crit(M) > CONF}
    => {N, s M, < O : Node | status : ready > CONF} [narrowing] .

    rl [bug-get-ticket] : {s s s N, s s s M, < O : Node | status : ready > CONF}
    => {s s s N, s s s M, < O : Node | status : wait(s s s N) > CONF} [narrowing] .
endm

mod BAKERY-CONST is
    protecting GLOBAL .
    protecting BOOL .

    var O : Oid . 
    var OS : OidSet .
    var CF : Configuration .
    var PHI : Bool .
    vars N M N' M' : Natural .
    var INIT : InitConfiguration .

    op noDupl : OidSet -> Bool .
    eq noDupl(O ; O ; OS) = false .

    op getOids : Configuration -> OidSet [memo] .
    eq getOids(< O : Node | ATTS:StatusAttr > CF) = O ; getOids(CF) .
    eq getOids(none) =  none .

endm

mod BAKERY-ANALYSIS is
    protecting BAKERY .
    protecting BAKERY-CONST .
    including STATE .
    subsort Global < State .
    eq inv(S:State) = true .
endm
